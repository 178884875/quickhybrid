/*!
 * quickhybrid v0.0.1
 * (c) 2017-2017 dailc
 * Released under the BSD-3-Clause License.
 * https://github.com/quickhybrid/quickhybrid
 */
!function(o,R){"object"==typeof exports&&"undefined"!=typeof module?module.exports=R():"function"==typeof define&&define.amd?define(R):o.ejs=R()}(this,function(){"use strict";function o(o){console.error("[quick error]: "+o)}function R(o){console.log("[quick log]: "+o)}function e(o){for(var R=o,e=arguments.length,i=Array(e>1?e-1:0),E=1;E<e;E++)i[E-1]=arguments[E];return i.forEach(function(o){Object.keys(o).forEach(function(e){R[e]=o[e]})}),R}function i(o,R){if("string"!=typeof o||"string"!=typeof R)throw new Error("version need to be string type");for(var e=o.split("."),i=R.split("."),E=Math.max(e.length,i.length),s=0;s<E;s+=1){var n=e[s]||0,t=i[s]||0;if(n-=0,t-=0,n>t)return 1;if(n<t)return-1}return 0}var E={ERROR_TYPE_APIOS:{code:1001,msg:"\u8be5API\u65e0\u6cd5\u5728\u5f53\u524dOS\u4e0b\u8fd0\u884c"},ERROR_TYPE_APIMODIFY:{code:1002,msg:"\u4e0d\u5141\u8bb8\u66f4\u6539JSSDK\u7684API"},ERROR_TYPE_MODULEMODIFY:{code:1003,msg:"\u4e0d\u5141\u8bb8\u66f4\u6539JSSDK\u7684\u6a21\u5757"},ERROR_TYPE_APINOTEXIST:{code:1004,msg:"\u8c03\u7528\u4e86\u4e0d\u5b58\u5728\u7684api"},ERROR_TYPE_PROTONOTEXIST:{code:1005,msg:"\u8c03\u7528\u9519\u8bef\uff0c\u8be5\u7ec4\u4ef6api\u5bf9\u5e94\u7684proto\u4e0d\u5b58\u5728"},ERROR_TYPE_CUSTOMEAPINOTEXIST:{code:1006,msg:"\u975e\u5bb9\u5668\u4e0b\u65e0\u6cd5\u8c03\u7528\u81ea\u5b9a\u4e49\u7ec4\u4ef6API"},ERROR_TYPE_EVENTNOTEXIST:{code:1007,msg:"\u5bf9\u5e94\u7684event\u4e8b\u4ef6\u5728\u8be5\u73af\u5883\u4e0b\u4e0d\u5b58\u5728"},ERROR_TYPE_INITVERSIONERROR:{code:1008,msg:"\u521d\u59cb\u5316\u7248\u672c\u53f7\u9519\u8bef\uff0c\u8bf7\u68c0\u67e5\u5bb9\u5668api\u7684\u5b9e\u73b0\u60c5\u51b5"},ERROR_TYPE_READYMODIFY:{code:2001,msg:"ready\u56de\u8c03\u4e0d\u5141\u8bb8\u591a\u6b21\u8bbe\u7f6e"},ERROR_TYPE_CONFIGMODIFY:{code:2002,msg:"config\u4e0d\u5141\u8bb8\u591a\u6b21\u8c03\u7528"},ERROR_TYPE_CONFIGERROR:{code:2003,msg:"config\u6821\u9a8c\u9519\u8bef"},ERROR_TYPE_VERSIONNOTSUPPORT:{code:2004,msg:"\u4e0d\u652f\u6301\u5f53\u524d\u5bb9\u5668\u7248\u672c\uff0c\u8bf7\u786e\u4fdd\u5bb9\u5668\u4e0e\u524d\u7aef\u5e93\u7248\u672c\u5339\u914d"},ERROR_TYPE_VERSIONNEEDUPGRADE:{code:2005,msg:"\u5f53\u524dJSSDK\u5e93\u5c0f\u4e8e\u5bb9\u5668\u7248\u672c\uff0c\u8bf7\u5c06\u524d\u7aef\u5e93\u5347\u7ea7\u5230\u6700\u65b0\u7248\u672c"},ERROR_TYPE_NATIVE:{code:3e3,msg:"\u6355\u83b7\u5230\u4e00\u5904\u539f\u751f\u5bb9\u5668\u9519\u8bef"},ERROR_TYPE_NATIVECALL:{code:3001,msg:"\u539f\u751f\u8c03\u7528H5\u65f6\u53c2\u6570\u4e0d\u5bf9"},ERROR_TYPE_UNKNOWN:{code:9999,msg:"\u672a\u77e5\u9519\u8bef"}},s={};return function(s){function n(){var R=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"\u9519\u8bef!";o("code:"+R+", msg:"+e),O&&O({code:R,message:e})}function t(){r.runtime&&r.runtime.getQuickVersion?r.runtime.getQuickVersion({success:function(o){var R=o.version;i(r.version,R)<0&&r.errorTips(E.ERROR_TYPE_VERSIONNEEDUPGRADE.code,E.ERROR_TYPE_VERSIONNEEDUPGRADE.msg)},error:function(){n(E.ERROR_TYPE_INITVERSIONERROR.code,E.ERROR_TYPE_INITVERSIONERROR.msg)}}):n(E.ERROR_TYPE_VERSIONNOTSUPPORT.code,E.ERROR_TYPE_VERSIONNOTSUPPORT.msg)}var r=s,O=void 0,c=void 0,_=!1,d=!1;r.config=function(o){if(d)n(E.ERROR_TYPE_CONFIGMODIFY.code,E.ERROR_TYPE_CONFIGMODIFY.msg);else{d=!0;var R=function(){c?c():_=!0};r.os.quick?(t(),r.auth.config(e({success:function(){R()},error:function(o){var R=o?JSON.stringify(o):E.ERROR_TYPE_CONFIGERROR.msg;n(E.ERROR_TYPE_CONFIGERROR.code,R)}},o))):R()}},r.ready=function(o){c?n(E.ERROR_TYPE_READYMODIFY.code,E.ERROR_TYPE_READYMODIFY.msg):(c=o,_&&(R("ready!"),_=!1,c()))},r.error=function(o){O=o}}(s),function(o){(function(o){this.os={};var R=o.match(/(Android);?[\s/]+([\d.]+)?/);R&&(this.os.android=!0,this.os.version=R[2],this.os.isBadAndroid=!/Chrome\/\d/.test(window.navigator.appVersion));var e=o.match(/(iPhone\sOS)\s([\d_]+)/);e&&(this.os.ios=!0,this.os.iphone=!0,this.os.version=e[2].replace(/_/g,"."));var i=o.match(/(iPad).*OS\s([\d_]+)/);i&&(this.os.ios=!0,this.os.ipad=!0,this.os.version=i[2].replace(/_/g,"."));var E=o.match(/QuickHybrid/i);E&&(this.os.quick=!0);var s=o.match(/EpointEJS/i);s&&(this.os.ejs=!0);var n=o.match(/DingTalk/i);n&&(this.os.dd=!0),s||n||E||(this.os.h5=!0)}).call(o,navigator.userAgent)}(s),s.Version="3.0.0",s});_TYPE_VERSIONNEEDUPGRADE: {
        code: 2005,
        msg: '当前JSSDK库小于容器版本，请将前端库升级到最新版本'
    },

    /**
     * 3000 原生错误(非API错误)，原生捕获到的错误都会通知J5
     */
    ERROR_TYPE_NATIVE: {
        code: 3000,
        msg: '捕获到一处原生容器错误'
    },

    /**
     * 3001 原生调用h5错误  原生通过JSBridge调用h5错误，可能是参数不对
     */
    ERROR_TYPE_NATIVECALL: {
        code: 3001,
        msg: '原生调用H5时参数不对'
    },

    /**
     * 9999 其它未知错误
     */
    ERROR_TYPE_UNKNOWN: {
        code: 9999,
        msg: '未知错误'
    }
};

/**
 * 初始化给配置全局函数
 */
function initMixin(hybridJs) {
    var quick = hybridJs;

    /**
     * 几个全局变量 用来控制全局的config与ready逻辑
     * 默认ready是false的
     */
    var errorFunc = void 0;
    var readyFunc = void 0;
    var isAllowReady = false;
    var isConfig = false;

    /**
     * 提示全局错误
     * @param {Nunber} code 错误代码
     * @param {String} msg 错误提示
     */
    function errorTips() {
        var code = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
        var msg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '错误!';

        warn('code:' + code + ', msg:' + msg);
        errorFunc && errorFunc({
            code: code,
            message: msg
        });
    }

    /**
     * 检查环境是否合法，包括
     * 检测是否有检测版本号，如果不是，给出错误提示
     * 是否版本号小于容器版本号，如果小于，给予升级提示
     */
    function checkEnvAndPrompt() {
        if (!quick.runtime || !quick.runtime.getQuickVersion) {
            errorTips(globalError.ERROR_TYPE_VERSIONNOTSUPPORT.code, globalError.ERROR_TYPE_VERSIONNOTSUPPORT.msg);
        } else {
            quick.runtime.getQuickVersion({
                success: function success(result) {
                    var version = result.version;

                    if (compareVersion(quick.version, version) < 0) {
                        quick.errorTips(globalError.ERROR_TYPE_VERSIONNEEDUPGRADE.code, globalError.ERROR_TYPE_VERSIONNEEDUPGRADE.msg);
                    }
                },
                error: function error() {
                    errorTips(globalError.ERROR_TYPE_INITVERSIONERROR.code, globalError.ERROR_TYPE_INITVERSIONERROR.msg);
                }
            });
        }
    }

    /**
     * 页面初始化时必须要这个config函数
     * 必须先声明ready，然后再config
     * @param {Object} params
     * config的jsApiList主要是同来通知给原生进行注册的
     * 所以这个接口到时候需要向原生容器请求的
     */
    quick.config = function config(params) {
        if (isConfig) {
            errorTips(globalError.ERROR_TYPE_CONFIGMODIFY.code, globalError.ERROR_TYPE_CONFIGMODIFY.msg);
        } else {
            isConfig = true;

            var _success = function _success() {
                // 如果这时候有ready回调
                if (readyFunc) {
                    readyFunc();
                } else {
                    // 允许ready直接执行
                    isAllowReady = true;
                }
            };

            if (quick.os.quick) {
                // 暂时检查环境默认就进行，因为框架默认注册了基本api的，并且这样2.也可以给予相应提示
                checkEnvAndPrompt();

                quick.auth.config(extend({
                    success: function success() {
                        _success();
                    },
                    error: function error(_error) {
                        var tips = _error ? JSON.stringify(_error) : globalError.ERROR_TYPE_CONFIGERROR.msg;

                        errorTips(globalError.ERROR_TYPE_CONFIGERROR.code, tips);
                    }
                }, params));
            } else {
                _success();
            }
        }
    };

    /**
     *  初始化完毕，并且config验证完毕后会触发这个回调
     * 注意，只有config了，才会触发ready，否则无法触发
     * ready只会触发一次，所以如果同时设置两个，第二个ready回调会无效
     * @param {Function} callback 回调函数
     */
    quick.ready = function ready(callback) {
        if (!readyFunc) {
            readyFunc = callback;
            // 如果config先进行，然后才进行ready,这时候恰好又isAllowReady，代表ready可以直接自动执行
            if (isAllowReady) {
                log('ready!');
                isAllowReady = false;
                readyFunc();
            }
        } else {
            errorTips(globalError.ERROR_TYPE_READYMODIFY.code, globalError.ERROR_TYPE_READYMODIFY.msg);
        }
    };

    /**
     * 当出现错误时，会通过这个函数回调给开发者，可以拿到里面的提示信息
     * @param {Function} callback 开发者设置的回调(每次会监听一个全局error函数)
     * 回调的参数好似
     * msg 错误信息
     * code 错误码
     */
    quick.error = function error(callback) {
        errorFunc = callback;
    };
}

/**
 * 加入系统判断功能
 */
function osMixin(hybridJs) {
    var detect = function detect(ua) {
        this.os = {};

        var android = ua.match(/(Android);?[\s/]+([\d.]+)?/);

        if (android) {
            this.os.android = true;
            this.os.version = android[2];
            this.os.isBadAndroid = !/Chrome\/\d/.test(window.navigator.appVersion);
        }

        var iphone = ua.match(/(iPhone\sOS)\s([\d_]+)/);

        if (iphone) {
            this.os.ios = true;
            this.os.iphone = true;
            this.os.version = iphone[2].replace(/_/g, '.');
        }

        var ipad = ua.match(/(iPad).*OS\s([\d_]+)/);

        if (ipad) {
            this.os.ios = true;
            this.os.ipad = true;
            this.os.version = ipad[2].replace(/_/g, '.');
        }

        // quickhybrid的容器
        var quick = ua.match(/QuickHybrid/i);

        if (quick) {
            this.os.quick = true;
        }

        // epoint的容器
        var ejs = ua.match(/EpointEJS/i);

        if (ejs) {
            this.os.ejs = true;
        }

        var dd = ua.match(/DingTalk/i);

        if (dd) {
            this.os.dd = true;
        }

        // 如果ejs和钉钉以及quick都不是，则默认为h5
        if (!ejs && !dd && !quick) {
            this.os.h5 = true;
        }
    };

    detect.call(hybridJs, navigator.userAgent);
}

var quick = {};

initMixin(quick);
osMixin(quick);

quick.Version = '3.0.0';

return quick;

})));
